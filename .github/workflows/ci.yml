name: Build, Test & Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: ['3.2.3']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Rubocop
        run: bundle exec rubocop

      - name: Migrate Test DB
        run: bundle exec rake db:migrate RAILS_ENV=test
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

      - name: Run tests
        run: bundle exec rake test
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.1.1
        with:
          verbose: true
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: |
            ndolestudio/httpmock
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value=main

      - name: Build and push docker image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: APP_VERSION=${{ github.sha }}
        if: github.event_name != 'pull_request'
